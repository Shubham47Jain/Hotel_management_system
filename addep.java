package hotel;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JPanel;
import java.sql.*;
import java.util.Date;
import javax.swing.JOptionPane;

public class addep extends javax.swing.JPanel {

    JPanel rp;
    int k=0,mo,em;

Connection con=null;
Statement st=null;
ResultSet rs=null;

public addep(JPanel abc) {
        rp=abc;
        mo=0;
        em=0;
        initComponents();
this.setBackground(new Color(0,0,0,0));
ep.setBackground(new Color(0,0,0,0));
ri.setBackground(new Color(0,0,0,0));
ep.setVisible(false);
        try
        {
        Class.forName("com.mysql.jdbc.Driver");
        con=DriverManager.getConnection("jdbc:mysql://localhost/HGP","root","thakur");
        st=con.createStatement();
        rs=st.executeQuery("select etp from etype;");
      while(rs.next())
        {
         cb1.addItem(rs.getString(1).toString());   
        }
        cb1.addItem("Other");   
        }
        catch(Exception e)
        { System.out.print(e); }
        
        t1.setEditable(false);
        t2.setEditable(false);
        t3.setEditable(false);
        t4.setEditable(false);
        t5.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ep = new javax.swing.JPanel();
        error = new javax.swing.JLabel();
        ri = new javax.swing.JPanel();
        jfhesjfesj = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        l9 = new javax.swing.JLabel();
        l6 = new javax.swing.JLabel();
        l8 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox();
        t1 = new javax.swing.JTextField();
        t4 = new javax.swing.JTextField();
        t5 = new javax.swing.JTextField();
        t3 = new javax.swing.JTextField();
        t6 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        t7 = new javax.swing.JTextField();
        but = new javax.swing.JButton();

        error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        error.setForeground(new java.awt.Color(204, 255, 204));
        error.setText("! Error");

        javax.swing.GroupLayout epLayout = new javax.swing.GroupLayout(ep);
        ep.setLayout(epLayout);
        epLayout.setHorizontalGroup(
            epLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
        epLayout.setVerticalGroup(
            epLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        ri.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                riMouseMoved(evt);
            }
        });

        jfhesjfesj.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jfhesjfesj.setForeground(new java.awt.Color(255, 255, 255));
        jfhesjfesj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jfhesjfesj.setText("Job Post");

        l1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l1.setForeground(new java.awt.Color(255, 255, 255));
        l1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l1.setText("Name");

        l3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l3.setForeground(new java.awt.Color(255, 255, 255));
        l3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l3.setText("Address");

        l5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l5.setForeground(new java.awt.Color(255, 255, 255));
        l5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l5.setText("City");

        l7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l7.setForeground(new java.awt.Color(255, 255, 255));
        l7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l7.setText("Mobile No.");

        l9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l9.setForeground(new java.awt.Color(255, 255, 255));
        l9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l9.setText("Salary");

        l6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l6.setForeground(new java.awt.Color(255, 255, 255));
        l6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l6.setText("Email");

        l8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l8.setForeground(new java.awt.Color(255, 255, 255));
        l8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l8.setText("Joining Date");

        cb1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb1.setForeground(new java.awt.Color(51, 51, 51));
        cb1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cb1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cb1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cb1MouseClicked(evt);
            }
        });
        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });

        t1.setBackground(new java.awt.Color(255, 255, 204));
        t1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t1.setForeground(new java.awt.Color(51, 51, 51));
        t1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        t1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t1KeyPressed(evt);
            }
        });

        t4.setBackground(new java.awt.Color(255, 255, 204));
        t4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t4.setForeground(new java.awt.Color(51, 51, 51));
        t4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        t4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t4KeyPressed(evt);
            }
        });

        t5.setBackground(new java.awt.Color(255, 255, 204));
        t5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t5.setForeground(new java.awt.Color(51, 51, 51));
        t5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        t5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t5KeyPressed(evt);
            }
        });

        t3.setBackground(new java.awt.Color(255, 255, 204));
        t3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t3.setForeground(new java.awt.Color(51, 51, 51));
        t3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t3ActionPerformed(evt);
            }
        });
        t3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t3KeyTyped(evt);
            }
        });

        t6.setEditable(false);
        t6.setBackground(new java.awt.Color(255, 255, 204));
        t6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t6.setForeground(new java.awt.Color(51, 51, 51));
        t6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        t6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t6KeyPressed(evt);
            }
        });

        t2.setBackground(new java.awt.Color(255, 255, 204));
        t2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t2.setForeground(new java.awt.Color(51, 51, 51));
        t2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        t2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t2KeyPressed(evt);
            }
        });

        t7.setEditable(false);
        t7.setBackground(new java.awt.Color(255, 255, 204));
        t7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t7.setForeground(new java.awt.Color(51, 51, 51));
        t7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        but.setBackground(new java.awt.Color(0, 102, 102));
        but.setFont(new java.awt.Font("Bell Gothic Std Light", 3, 24)); // NOI18N
        but.setForeground(new java.awt.Color(255, 255, 255));
        but.setText("ADD");
        but.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        but.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout riLayout = new javax.swing.GroupLayout(ri);
        ri.setLayout(riLayout);
        riLayout.setHorizontalGroup(
            riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(riLayout.createSequentialGroup()
                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(riLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riLayout.createSequentialGroup()
                                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riLayout.createSequentialGroup()
                                .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)))))
                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(riLayout.createSequentialGroup()
                        .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(riLayout.createSequentialGroup()
                                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(t1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addComponent(t3))
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riLayout.createSequentialGroup()
                                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(t7, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(55, 55, 55)))
                        .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(l6, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addComponent(l3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riLayout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riLayout.createSequentialGroup()
                                .addComponent(jfhesjfesj, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(218, 218, 218))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riLayout.createSequentialGroup()
                                .addComponent(but, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))))))
        );
        riLayout.setVerticalGroup(
            riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(riLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfhesjfesj, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(riLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ri, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(ep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void riMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_riMouseMoved
        if(k==1){
        rp.setVisible(false);
        rp.setVisible(true);
        }

       else if(k==5){
           if(t3.getText().length()>0 && t3.getText().length()<10)
           { t3.setBackground(Color.red);
            mo=1;
       }}
        k=0;
    }//GEN-LAST:event_riMouseMoved

    private void t3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t3KeyTyped

    }//GEN-LAST:event_t3KeyTyped

    private void t3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t3KeyPressed
        ep.setVisible(false);
        rp.setVisible(false);
        rp.setVisible(true);

int key=evt.getKeyCode();
if((key>=evt.VK_0 && key<=evt.VK_9)||(key>=evt.VK_NUMPAD0 && key<=evt.VK_NUMPAD9)||key==KeyEvent.VK_BACK_SPACE || key==evt.VK_LEFT || key==evt.VK_RIGHT)
{
 t3.setEditable(true);
 t3.setBackground(new Color(255,255,204));
}
else
{
 t3.setEditable(false);
}
   t3.requestFocus();
    }//GEN-LAST:event_t3KeyPressed

    private void t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t3ActionPerformed

    }//GEN-LAST:event_t3ActionPerformed

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1ActionPerformed
        t1.setText("");         t1.setEditable(false);
        t2.setText("");         t2.setEditable(false);
        t3.setText("");         t3.setEditable(false);
        t4.setText("");         t4.setEditable(false);
        t5.setText("");         t5.setEditable(false);
        t6.setText("");         t6.setEditable(false);
        t7.setText(""); 

      if(cb1.getSelectedIndex()!=0)
       {
        t1.setEditable(true);
        t2.setEditable(true);
        t3.setEditable(true);
        t4.setEditable(true);
        t5.setEditable(true);

        Date date=new Date();
        String dte=date.getDate()+"/"+(date.getMonth()+1)+"/"+(date.getYear()+1900);
        t7.setText(dte);

        try
        {
        Class.forName("com.mysql.jdbc.Driver");
        con=DriverManager.getConnection("jdbc:mysql://localhost/HGP","root","thakur");
        st=con.createStatement();
        rs=st.executeQuery("select sal from etype where etp='"+cb1.getSelectedItem().toString()+"';");
      while(rs.next())
        {
         t6.setText(rs.getString(1).toString());   
        }
        }
        catch(Exception e) { }
       }
     rp.setVisible(false);
     rp.setVisible(true);
     t1.requestFocus();
    }//GEN-LAST:event_cb1ActionPerformed

    private void cb1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb1MouseClicked
        k=1;
    }//GEN-LAST:event_cb1MouseClicked

    private void t1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t1KeyPressed
        ep.setVisible(false);        // TODO add your handling code here:
        rp.setVisible(false);
        rp.setVisible(true);
        t1.requestFocus();
        t1.setBackground(new Color(255,255,204));
    }//GEN-LAST:event_t1KeyPressed

    private void t4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t4KeyPressed
        ep.setVisible(false);        // TODO add your handling code here:
        rp.setVisible(false);
        rp.setVisible(true);
        t4.requestFocus();
        t4.setBackground(new Color(255,255,204));
    }//GEN-LAST:event_t4KeyPressed

    private void t5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t5KeyPressed
        ep.setVisible(false);        // TODO add your handling code here:
        rp.setVisible(false);
        rp.setVisible(true);
        t5.requestFocus();
        t5.setBackground(new Color(255,255,204));
        // TODO add your handling code here:
    }//GEN-LAST:event_t5KeyPressed

    private void t3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t3KeyReleased
        if(t3.getText().length()>10){
        t3.setEditable(true);
        t3.setBackground(Color.red);
        mo=1;
        }
        if(t3.getText().length()==10)mo=0;
        
        k=5;
    }//GEN-LAST:event_t3KeyReleased

    private void t2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t2KeyPressed
        ep.setVisible(false);
        rp.setVisible(false);
        rp.setVisible(true);
        t2.requestFocus();
        t2.setBackground(new Color(255,255,204));
    }//GEN-LAST:event_t2KeyPressed

    private void t6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t6KeyPressed

    }//GEN-LAST:event_t6KeyPressed

    private void butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butActionPerformed
   String s1="HGPE";
   String s2="None";
   if(cb1.getSelectedIndex()==1 || cb1.getSelectedIndex()==2) s2=""+(int)(Math.random()*10000);
   String s3=t1.getText();
   String s4=t4.getText();
   String s5=t5.getText();
   String s6=t2.getText();
   String s7=t3.getText();
   String s8=cb1.getSelectedItem().toString();
   String s9=t6.getText();
   String s10=t7.getText();
   String s11="Dont Know";

   if(s5.isEmpty())
   {
    t5.setBackground(Color.red);   
    t5.requestFocus();
   }
   

   if(s4.isEmpty())
   {
    t4.setBackground(Color.red);   
    t4.requestFocus();
   }

   if(mo==1 || s7.isEmpty())
   {
    t3.setBackground(Color.red);   
    t3.requestFocus();
   }

   if(!s6.endsWith(".com") || s6.isEmpty())
   {
    t2.setBackground(Color.red);   
    t2.requestFocus();
       em=1;
   }
   else em=0;

   if(s3.isEmpty())
   {
    t1.setBackground(Color.red);   
    t1.requestFocus();
   }

   
if(!s3.isEmpty() && !s4.isEmpty() && !s5.isEmpty() && (em==0) && (mo==0))
{
    int num=0;
try
{
rs=st.executeQuery("select eid from id;");
while(rs.next())
{
num=rs.getInt(1);
}
s1+=num;

st.executeUpdate("insert into emp values('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"','"+s6+"','"+s7+"','"+s8+"','"+s9+"','"+s10+"','"+s11+"');");
st.executeUpdate("update id set eid="+(num+1));

        cb1.setSelectedIndex(0);
        t1.setText("");         t1.setEditable(false);
        t2.setText("");         t2.setEditable(false);
        t3.setText("");         t3.setEditable(false);
        t4.setText("");         t4.setEditable(false);
        t5.setText("");         t5.setEditable(false);
        t6.setText("");         t6.setEditable(false);
        t7.setText(""); 

      conf cml;
      if(s2.equals("None")) cml=new conf(s1,s2,0); 
                       else cml=new conf(s1,s2,1);
      
           cml.setLocationRelativeTo(null);
           cml.setVisible(true);


}catch(Exception e){System.out.print("error = "+e);}
}
else
{
    ep.setVisible(true);
    error.setText(" ! Please Fill All Fields...");
    rp.setVisible(false);
    rp.setVisible(true); 
}        // TODO add your handling code here:
    }//GEN-LAST:event_butActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but;
    private javax.swing.JComboBox cb1;
    private javax.swing.JPanel ep;
    private javax.swing.JLabel error;
    private javax.swing.JLabel jfhesjfesj;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l7;
    private javax.swing.JLabel l8;
    private javax.swing.JLabel l9;
    private javax.swing.JPanel ri;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField t4;
    private javax.swing.JTextField t5;
    private javax.swing.JTextField t6;
    private javax.swing.JTextField t7;
    // End of variables declaration//GEN-END:variables
}
